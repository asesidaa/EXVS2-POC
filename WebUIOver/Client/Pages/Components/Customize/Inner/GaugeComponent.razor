@using WebUIOver.Client.Context.CustomizeCard
@using WebUIOver.Client.Pages.Dialogs
@using WebUIOver.Client.Services.Common
@using WebUIOver.Shared.Dto.Common
@using WebUIOVer.Shared.Dto.Common

@inject IDialogService DialogService
@inject ICommonDataService CommonDataService

<MudCard Outlined="true" Class="my-2" Elevation="5">
    <MudCardHeader>
        <MudText>@DisplayLabel</MudText>
    </MudCardHeader>
    <MudCardContent>
        <MudGrid Class="align-center">
            @{
                uint gaugeId = 0;

                if (BasicProfile is not null)
                {
                    gaugeId = BasicProfile.DefaultGaugeDesignId;
                }

                if (FavouriteMs is not null)
                {
                    gaugeId = FavouriteMs.GaugeDesignId;
                }

                var gaugeImagePath = $"images/gauges/{gaugeId}.webp";
                var gauge = CommonDataService.GetGaugeById(gaugeId);
                var gaugeName = gauge?.Value ?? localizer["unknown_gauge"];
            }
            <MudItem xs="10" sm="11">
                <MudField Label="@DisplayLabel" Variant="Variant.Outlined">
                    @if (gauge is not null && EnableImagePreview)
                    {
                        <div class="d-flex justify-center">
                            <MudImage ObjectPosition="ObjectPosition.Center" Src="@gaugeImagePath" Fluid="true" ObjectFit="ObjectFit.Cover" Class="rounded-lg" Width="720"/>
                        </div>
                    }
                    <div class="d-flex justify-center">
                        <MudText Align="Align.Center">@((MarkupString)gaugeName)</MudText>
                    </div>
                </MudField>
            </MudItem>
            <MudItem xs="2" sm="1">
                <MudIconButton Variant="Variant.Filled" Size="Size.Small" Icon="@Icons.Material.Filled.Edit" aria-label="edit"
                               OnClick="() => OpenChangeGaugeDialog(gaugeId)"/>
            </MudItem>
        </MudGrid>
    </MudCardContent>
</MudCard>

@code
{
    [Parameter] 
    public string Type { get; set; } = "Basic";
    
    [Parameter] 
    public BasicProfile? BasicProfile { get; set; }
    
    [Parameter]
    public FavouriteMs? FavouriteMs { get; set; }

    [Parameter] 
    public string DisplayLabel { get; set; } = string.Empty;

    [Parameter] public bool EnableImagePreview { get; set; } = true;

    private const bool ForDataCollection = false;
    
    private async Task OpenChangeGaugeDialog(uint gaugeId)
    {
        var parameters = new DialogParameters
        {
            { "Data", new[] { gaugeId } },
            { "EnableImagePreview", EnableImagePreview },
            { "HasCategory", false },
            { "SelectedString", "Selected Gauge: "},
            { "ImagePathPrefix", "images/gauges"},
            { "Mode", "Gauges" }
        };
        var dialog = await DialogService.ShowAsync<ChangeGeneralPreviewDialog>(localizer["dialogtitle_gauge"], parameters, DialogOptions);
        var result = await dialog.Result;

        if (!result.Canceled && result.Data != null)
        {
            if (BasicProfile is not null)
            {
                BasicProfile.DefaultGaugeDesignId = (result.Data as uint[])!.FirstOrDefault();
            }
            
            if (FavouriteMs is not null)
            {
                FavouriteMs.GaugeDesignId = (result.Data as uint[])!.FirstOrDefault();
            }
            
            StateHasChanged();
        }
    }
    
    private static readonly DialogOptions DialogOptions = new()
    {
        CloseOnEscapeKey = false,
        BackdropClick = false,
        FullWidth = true,
        MaxWidth = MaxWidth.ExtraExtraLarge
    };
}